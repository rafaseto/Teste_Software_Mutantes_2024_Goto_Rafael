import pytest

from dirty_equals import (
    IsApprox,
    IsFloat,
    IsFloatInf,
    IsFloatInfNeg,
    IsFloatInfPos,
    IsFloatNan,
    IsInt,
    IsNegative,
    IsNegativeFloat,
    IsNegativeInt,
    IsNonNegative,
    IsNonPositive,
    IsPositive,
    IsPositiveFloat,
    IsPositiveInt,
)


@pytest.mark.parametrize(
    'other,dirty',
    [
        (0, IsInt),
        (1, IsInt),
        (2, IsInt),
        (3, IsInt),
        (4, IsInt),
        (5, IsInt),
        (6, IsInt),
        (7, IsInt),
        (8, IsInt),
        (9, IsInt),
        (0, IsInt(exactly=0)),
        (1, IsInt(exactly=1)),
        (2, IsInt(exactly=2)),
        (3, IsInt(exactly=3)),
        (4, IsInt(exactly=4)),
        (5, IsInt(exactly=5)),
        (6, IsInt(exactly=6)),
        (7, IsInt(exactly=7)),
        (8, IsInt(exactly=8)),
        (9, IsInt(exactly=9)),
        (1, IsPositiveInt),
        (2, IsPositiveInt),
        (3, IsPositiveInt),
        (4, IsPositiveInt),
        (5, IsPositiveInt),
        (6, IsPositiveInt),
        (7, IsPositiveInt),
        (8, IsPositiveInt),
        (9, IsPositiveInt),
        (-1, IsNegativeInt),
        (-2, IsNegativeInt),
        (-3, IsNegativeInt),
        (-4, IsNegativeInt),
        (-5, IsNegativeInt),
        (-6, IsNegativeInt),
        (-7, IsNegativeInt),
        (-8, IsNegativeInt),
        (-9, IsNegativeInt),
        (0.0, IsFloat),
        (-1.0, IsFloat),
        (-2.0, IsFloat),
        (-3.0, IsFloat),
        (-4.0, IsFloat),
        (-5.0, IsFloat),
        (-6.0, IsFloat),
        (-7.0, IsFloat),
        (-8.0, IsFloat),
        (-9.0, IsFloat),
        (0.0, IsFloat(exactly=0.0)),
        (-1.0, IsFloat(exactly=-1.0)),
        (-2.0, IsFloat(exactly=-2.0)),
        (-3.0, IsFloat(exactly=-3.0)),
        (-4.0, IsFloat(exactly=-4.0)),
        (-5.0, IsFloat(exactly=-5.0)),
        (-6.0, IsFloat(exactly=-6.0)),
        (-7.0, IsFloat(exactly=-7.0)),
        (-8.0, IsFloat(exactly=-8.0)),
        (-9.0, IsFloat(exactly=-9.0)),
        (1.0, IsPositiveFloat),
        (-1.0, IsNegativeFloat),
        (1, IsPositive),
        (1.0, IsPositive),
        (-1, IsNegative),
        (-1.0, IsNegative),
        (5, IsInt(gt=4)),
        (5, IsInt(ge=5)),
        (5, IsInt(lt=6)),
        (5, IsInt(le=5)),
        (1, IsApprox(1)),
        (1, IsApprox(2, delta=1)),
        (100, IsApprox(99)),
        (-100, IsApprox(-99)),
        (0, IsNonNegative),
        (1, IsNonNegative),
        (0.0, IsNonNegative),
        (1.0, IsNonNegative),
        (0, IsNonPositive),
        (-1, IsNonPositive),
        (0.0, IsNonPositive),
        (-1.0, IsNonPositive),
        (-1, IsNonPositive & IsInt),
        (1, IsNonNegative & IsInt),
        (float('inf'), IsFloatInf),
        (-float('inf'), IsFloatInf),
        (float('-inf'), IsFloatInf),
        (float('inf'), IsFloatInfPos),
        (-float('-inf'), IsFloatInfPos),
        (-float('inf'), IsFloatInfNeg),
        (float('-inf'), IsFloatInfNeg),
        (float('nan'), IsFloatNan),
        (-float('nan'), IsFloatNan),
        (float('-nan'), IsFloatNan),
    ],
)
def test_dirty_equals(other, dirty):
    assert other == dirty


@pytest.mark.parametrize(
    'other,dirty',
    [
        (None, IsInt),
        (1.0, IsInt),
        (1.2, IsInt),
        (1.3, IsInt),
        (1.4, IsInt),
        (1.5, IsInt),
        (1.6, IsInt),
        (1.7, IsInt),
        (1.8, IsInt),
        (1.9, IsInt),
        (1.1, IsInt),
        (2.0, IsInt),
        (2.2, IsInt),
        (2.3, IsInt),
        (2.4, IsInt),
        (2.5, IsInt),
        (2.6, IsInt),
        (2.7, IsInt),
        (2.8, IsInt),
        (2.9, IsInt),
        (2.1, IsInt),
        (3.0, IsInt),
        (3.2, IsInt),
        (3.3, IsInt),
        (3.4, IsInt),
        (3.5, IsInt),
        (3.6, IsInt),
        (3.7, IsInt),
        (3.8, IsInt),
        (3.9, IsInt),
        (3.1, IsInt),
        (4.0, IsInt),
        (4.2, IsInt),
        (4.3, IsInt),
        (4.4, IsInt),
        (4.5, IsInt),
        (4.6, IsInt),
        (4.7, IsInt),
        (4.8, IsInt),
        (4.9, IsInt),
        (4.1, IsInt),
        (5.0, IsInt),
        (5.2, IsInt),
        (5.3, IsInt),
        (5.4, IsInt),
        (5.5, IsInt),
        (5.6, IsInt),
        (5.7, IsInt),
        (5.8, IsInt),
        (5.9, IsInt),
        (5.1, IsInt),
        (6.0, IsInt),
        (6.2, IsInt),
        (6.3, IsInt),
        (6.4, IsInt),
        (6.5, IsInt),
        (6.6, IsInt),
        (6.7, IsInt),
        (6.8, IsInt),
        (6.9, IsInt),
        (7.1, IsInt),
        (7.0, IsInt),
        (7.2, IsInt),
        (7.3, IsInt),
        (7.4, IsInt),
        (7.5, IsInt),
        (7.6, IsInt),
        (7.7, IsInt),
        (7.8, IsInt),
        (7.9, IsInt),
        (7.1, IsInt),
        (8.0, IsInt),
        (8.2, IsInt),
        (8.3, IsInt),
        (8.4, IsInt),
        (8.5, IsInt),
        (8.6, IsInt),
        (8.7, IsInt),
        (8.8, IsInt),
        (8.9, IsInt),
        (8.1, IsInt),
        (1, IsInt(exactly=2)),
        (1, IsInt(exactly=3)),
        (1, IsInt(exactly=4)),
        (1, IsInt(exactly=5)),
        (1, IsInt(exactly=6)),
        (1, IsInt(exactly=7)),
        (1, IsInt(exactly=8)),
        (1, IsInt(exactly=9)),
        (1, IsInt(exactly=0)),
        (True, IsInt),
        (False, IsInt),
        (1.0, IsInt()),
        (-1, IsPositiveInt),
        (None, IsPositiveInt),
        (0, IsPositiveInt),
        (1, IsNegativeInt),
        (0, IsNegativeInt),
        (None, IsNegativeInt),
        (1, IsFloat),
        (None, IsFloat),
        (1, IsFloat(exactly=1.0)),
        (1, IsFloat(exactly=2.0)),
        (1, IsFloat(exactly=3.0)),
        (1, IsFloat(exactly=4.0)),
        (1, IsFloat(exactly=5.0)),
        (1, IsFloat(exactly=6.0)),
        (1, IsFloat(exactly=7.0)),
        (1, IsFloat(exactly=8.0)),
        (1, IsFloat(exactly=9.0)),
        (1, IsFloat(exactly=0.0)),
        (1.1234, IsFloat(exactly=1.0)),
        (-1.0, IsPositiveFloat),
        (None, IsPositiveFloat),
        (0.0, IsPositiveFloat),
        (1.0, IsNegativeFloat),
        (None, IsNegativeFloat),
        (0.0, IsNegativeFloat),
        (2.0, IsNegativeFloat),
        (3.0, IsNegativeFloat),
        (-1, IsPositive),
        (None, IsPositive),
        (-1.0, IsPositive),
        (4, IsInt(gt=4)),
        (4, IsInt(ge=5)),
        (6, IsInt(lt=6)),
        (6, IsInt(le=5)),
        (-1, IsNonNegative),
        (None, IsNonNegative),
        (-1.0, IsNonNegative),
        (1, IsNonPositive),
        (1.0, IsNonPositive),
        (None, IsNonPositive),
        (-1.0, IsNonPositive & IsInt),
        (1.0, IsNonNegative & IsInt),
        (1, IsFloatNan),
        (1.0, IsFloatNan),
        (1, IsFloatInf),
        (1.0, IsFloatInf),
        (-float('inf'), IsFloatInfPos),
        (float('-inf'), IsFloatInfPos),
        (-float('-inf'), IsFloatInfNeg),
        (-float('-inf'), IsFloatInfNeg),
    ],
    ids=repr,
)
def test_dirty_not_equals(other, dirty):
    assert other != dirty


def test_invalid_approx_gt():
    with pytest.raises(TypeError, match='"approx" cannot be combined with "gt", "lt", "ge", or "le"'):
        IsInt(approx=1, gt=1)


def test_invalid_exactly_approx():
    with pytest.raises(TypeError, match='"exactly" cannot be combined with "approx"'):
        IsInt(exactly=1, approx=1)


def test_invalid_exactly_gt():
    with pytest.raises(TypeError, match='"exactly" cannot be combined with "gt", "lt", "ge", or "le"'):
        IsInt(exactly=1, gt=1)


def test_not_int():
    d = IsInt()
    with pytest.raises(AssertionError):
        assert '1' == d
    assert repr(d) == 'IsInt()'


def test_not_negative():
    d = IsNegativeInt
    with pytest.raises(AssertionError):
        assert 1 == d
    assert repr(d) == 'IsNegativeInt'
